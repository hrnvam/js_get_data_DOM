{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAwB,SAAS,gBAAgB,CAAC,qB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAElD,EAAyB,EAAE,CAEjC,EAAkB,OAAO,CAAC,SAAC,CAA3B,EACE,IAAM,EAAmB,WAAW,EAAQ,WAAW,CAAC,OAAO,CAAC,KAAM,KAEjE,MAAM,IACT,EAAuB,IAAI,CAAC,EAEhC,GAEA,IAAM,EAAkB,EAAuB,MAAM,CACnD,SAAC,CAAA,CAAa,CADhB,EAEI,OAAO,EAAc,CACvB,EACA,GAGI,EAAoB,EAAkB,EAAuB,MAAM,CAEzE,SAAS,EAAU,CAAM,EACvB,OAAO,EAAO,cAAc,CAAC,QAC/B,CAEA,SAAS,aAAa,CAAC,yBAAyB,WAAW,CACzD,EAAU,GAEZ,SAAS,aAAa,CAAC,2BAA2B,WAAW,CAC3D,EAAU","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar populationCountry = _to_consumable_array(document.querySelectorAll(\"span.population\"));\nvar populationCountryArray = [];\npopulationCountry.forEach(function(country) {\n    var populationNumber = parseFloat(country.textContent.replace(/,/g, \"\"));\n    if (!isNaN(populationNumber)) populationCountryArray.push(populationNumber);\n});\nvar totalPopulation = populationCountryArray.reduce(function(accumulator, current) {\n    return accumulator + current;\n}, 0);\nvar averagePopulation = totalPopulation / populationCountryArray.length;\nfunction addCommas(number) {\n    return number.toLocaleString(\"en-US\");\n}\ndocument.querySelector(\"span.total-population\").textContent = addCommas(totalPopulation);\ndocument.querySelector(\"span.average-population\").textContent = addCommas(averagePopulation);\n\n//# sourceMappingURL=index.76088a3b.js.map\n","'use strict';\n\nconst populationCountry = [...document.querySelectorAll('span.population')];\n\nconst populationCountryArray = [];\n\npopulationCountry.forEach((country) => {\n  const populationNumber = parseFloat(country.textContent.replace(/,/g, ''));\n\n  if (!isNaN(populationNumber)) {\n    populationCountryArray.push(populationNumber);\n  }\n});\n\nconst totalPopulation = populationCountryArray.reduce(\n  (accumulator, current) => {\n    return accumulator + current;\n  },\n  0,\n);\n\nconst averagePopulation = totalPopulation / populationCountryArray.length;\n\nfunction addCommas(number) {\n  return number.toLocaleString('en-US');\n}\n\ndocument.querySelector('span.total-population').textContent =\n  addCommas(totalPopulation);\n\ndocument.querySelector('span.average-population').textContent =\n  addCommas(averagePopulation);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","populationCountry","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","populationCountryArray","forEach","country","populationNumber","parseFloat","textContent","replace","isNaN","push","totalPopulation","reduce","accumulator","current","averagePopulation","addCommas","number","toLocaleString","querySelector"],"version":3,"file":"index.76088a3b.js.map"}